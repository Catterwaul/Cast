{"abstract":[{"text":"A mechanism to interface between untyped and typed errors.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Cast\/documentation\/Cast"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/cast\/forcecasterror(to:_:)-56fbu"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-hslz","doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-nnqj","doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-6z9jp","doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-3ryvf","doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-3vnaz"],"generated":true,"title":"forceCastError","anchor":"forceCastError"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forceCastError"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Error","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"errorType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Error"},{"text":".Type = Error.self, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> () ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Error"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The error type known for certain to be thrown by ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"errorType"},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that might throw an "},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"When you know for certain that a closure may only throw one type of error,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but that guarantee is not (or, due to compiler bugs, cannot be) represented in the type system,"},{"type":"text","text":" "},{"type":"text","text":"you can use this to “convert” it to “typed throws”."}],"type":"paragraph"},{"type":"aside","name":"Bug","content":[{"inlineContent":[{"text":"This should use “","type":"text"},{"type":"codeVoice","code":"each Parameter"},{"type":"text","text":"” to avoid necessitating an overload"},{"type":"text","text":" "},{"type":"text","text":"for closures that take no parameters, but that doesn’t compile."}],"type":"paragraph"}],"style":"note"}]}],"identifier":{"url":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-56fbu","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Function","externalID":"s:4Cast05forceA5Error2to_xyq_YKcq_m_xyKcts0C0R_r0_lF","symbolKind":"func","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forceCastError"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Error"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"kind":"text","text":".Type, () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> () ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol","title":"forceCastError(to:_:)","modules":[{"name":"Cast"}]},"references":{"doc://Cast/documentation/Cast/forceCastError(to:_:)-nnqj":{"title":"forceCastError(to:_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forceCastError","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"text":"Error","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"Error","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> (","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Error"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-nnqj","url":"\/documentation\/cast\/forcecasterror(to:_:)-nnqj","kind":"symbol","role":"symbol","abstract":[{"text":"A mechanism to interface between untyped and typed errors.","type":"text"}]},"doc://Cast/documentation/Cast/forceCastError(to:_:)-hslz":{"abstract":[{"text":"A mechanism to interface between untyped and typed errors.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forceCastError","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"text":"Error","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/cast\/forcecasterror(to:_:)-hslz","type":"topic","identifier":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-hslz","kind":"symbol","title":"forceCastError(to:_:)"},"doc://Cast/documentation/Cast/forceCastError(to:_:)-56fbu":{"url":"\/documentation\/cast\/forcecasterror(to:_:)-56fbu","abstract":[{"type":"text","text":"A mechanism to interface between untyped and typed errors."}],"identifier":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-56fbu","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forceCastError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Error"},{"text":".Type, () ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"title":"forceCastError(to:_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://Cast/documentation/Cast":{"kind":"symbol","url":"\/documentation\/cast","role":"collection","abstract":[{"text":"Add typed errors to untyped throwing functions and casting operations.","type":"text"}],"type":"topic","identifier":"doc:\/\/Cast\/documentation\/Cast","title":"Cast"},"doc://Cast/documentation/Cast/forceCastError(to:_:)-3ryvf":{"url":"\/documentation\/cast\/forcecasterror(to:_:)-3ryvf","identifier":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-3ryvf","kind":"symbol","type":"topic","title":"forceCastError(to:_:)","abstract":[{"type":"text","text":"A mechanism to interface between untyped and typed errors."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forceCastError"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":", ","kind":"text"},{"text":"Error","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":".Type, () ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":"("},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://Cast/documentation/Cast/forceCastError(to:_:)-3vnaz":{"type":"topic","title":"forceCastError(to:_:)","identifier":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-3vnaz","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"forceCastError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Error"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"kind":"text","text":".Type, ("},{"kind":"typeIdentifier","text":"Input"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"A mechanism to interface between untyped and typed errors.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/cast\/forcecasterror(to:_:)-3vnaz"},"doc://Cast/documentation/Cast/forceCastError(to:_:)-6z9jp":{"kind":"symbol","identifier":"doc:\/\/Cast\/documentation\/Cast\/forceCastError(to:_:)-6z9jp","url":"\/documentation\/cast\/forcecasterror(to:_:)-6z9jp","type":"topic","title":"forceCastError(to:_:)","abstract":[{"type":"text","text":"A mechanism to interface between untyped and typed errors."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forceCastError"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":", ","kind":"text"},{"text":"Error","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]}}}